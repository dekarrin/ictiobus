package {{ .FrontendPackage }}

/*
File automatically generated by the ictiobus compiler. DO NOT EDIT. This was
created by invoking ictiobus with the following command:

    {{ .Command }} {{ .CommandArgs }}
*/

import (
	"github.com/dekarrin/ictiobus"
	"github.com/dekarrin/ictiobus/trans"
)

// SDTS returns the syntax-directed translation scheme for the {{ .Lang }}
// frontend.
func SDTS() ictiobus.SDTS {
    sdts := ictiobus.NewSDTS()

{{ range .Bindings }}
    {{ range .Attributes }}
    sdtsBind{{ .Head | upperCamel }}{{ .Name | upperCamel }}(sdts)
    {{ end }}
{{ end }}

    return sdts
}

{{ range .Bindings }}
    {{ range .Attributes }}
func sdtsBind{{ .Head | upperCamel }}{{ .Name | upperCamel }}(sdts ictiobus.SDTS) {
        {{ range .Prods }}
        
            {{ if .Synthetic }}
    sdts.BindSynthesizedAttribute(        
            {{ else }}
    sdts.BindInheritedAttribute(
            {{ end }}
        "{{ .Head }}", []string{ {{- range .Symbols }}"{{ . }}", {{ end -}} },
        "{{ .Attribute }}",
        "{{ .Hook }}",
            {{ if .Args }}
        []trans.AttrRef{
            {{ range .Args }}
                {Relation: trans.NodeRelation{Type: trans.{{ .RelType }}, Index: {{ .RelIndex }} }, Name: "{{ .Name }}"},
            {{ end }}
        },
            {{ else }}
        nil,
            {{ end }}
            {{ if not .Synthetic }}
        trans.NodeRelation{Type: trans.{{ .ForRelType }}, Index: {{ .ForRelIndex }} },
            {{ end }}
    )
        {{ end }}
}
    {{ end }}
{{ end }}