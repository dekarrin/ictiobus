package {{ .FrontendPackage }}

/*
File automatically generated by the ictiobus compiler. DO NOT EDIT. This was
created by invoking ictiobus with the following command:

    {{ .Command }} {{ .CommandArgs }}
*/

import (
    _ "embed"

    "github.com/dekarrin/ictiobus"
    "github.com/dekarrin/ictiobus/lex"
)

var (
    //go:embed parser.cff
    parserData []byte
)

// Grammar returns the grammar for the parser for {{ .Lang }}. The grammar will
// also be pre-compiled with the parser, but it is included here as well for
// convenience.
func Grammar() grammar.Grammar {
    g := grammar.NewGrammar()

{{range .Classes -}}
{{"    "}}g.AddTerm({{ .Name }}.ID(), {{ .Name }})
{{- end}}
    
{{range .Rules}}{{/* no space removal here */}}
    {{range .Productions -}}

{{"    "}}g.AddRule("{{ .Head }}", []string{ {{- range .Symbols }}"{{ . }}", {{ end -}} })

    {{- end}}
{{- end}}

}

// Parser returns the ictiobus Parser compiled for {{ .Lang }}.
func Parser() ictiobus.Parser {
	p, err := DecodeParserBytes(parserData)
	if err != nil {
		panic("corrupted parser.cff file: " + err.Error())
	}

    return p
}