// Package {{ .TokenPkgName }} contains the token classes for the frontend. It is in a
// separate package so that it can be imported and used by external packages
// while still allowing those external packages to be imported by the rest of
// the frontend, such as the fishi syntax package.
package {{ .TokenPkgName }}

/*
File automatically generated by the ictiobus compiler. DO NOT EDIT. This was
created by invoking ictiobus with the following command:

    {{ .Command }} {{ .CommandArgs }}
*/

import (
    "github.com/dekarrin/ictiobus/lex"
    "github.com/dekarrin/ictiobus/types"
)

var (
{{range .Classes -}}
{{"    "}}{{.Name}} = lex.NewTokenClass("{{.ID}}", {{.Human | quote }})
{{end -}}
)

var all = map[string]types.TokenClass{
{{range .Classes -}}
    "{{.ID}}": {{.Name}},
{{end -}}
}

// ByID returns the TokenClass that has the given ID. If no token class of that
// ID exists, returns nil.
func ByID(id string) types.TokenClass{
    return all[id]
}
